@model List<BMA.Models.sp_GetIncomeWeekly_Result>
@{
    Layout = "~/Views/Layout/ManageLayout.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header" style="vertical-align: middle">
    <h1>@(ViewBag.Title)</h1>
    <div class="row">
        <div class="col-md-4"></div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="time-type">Thống kê theo</label>
                <select id="time-type" class="form-control">
                    <option value="1">Tuần</option>
                    <option value="2">Tháng</option>
                    <option value="3">Năm</option>
                </select>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="fromDate">Từ</label>
                <div class='input-group date' id='fromDate'>
                    <input type='text' readonly="readonly" class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label for="toDate">Đến</label>
                <div class='input-group date' id='toDate'>
                    <input type='text' readonly="readonly" class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="col-md-1">
            <div class="form-group" style="padding-top: 25px">
                <button class="btn btn-success" onclick="executeChart()">
                    <i class="fa fa-bar-chart" style="margin-right: 3px"></i>
                    Thống kê
                </button>
            </div>
        </div>
    </div>
</section>
<!-- Main content -->
<section class="content" id="review-income-content"></section>

@section ReviewIncomeByTimeScript{
    <script src="~/Scripts/ChartNew.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#fromDate').datetimepicker({
                ignoreReadonly: true,
                format: 'L',
                locale: 'vi',
                maxDate: moment().subtract(7, 'days')
            });
            $('#toDate').datetimepicker({
                ignoreReadonly: true,
                format: 'L',
                locale: 'vi',
                maxDate: moment(),
                useCurrent: false
            });
            $("#fromDate").on("dp.change", function (e) {
                $('#toDate').data("DateTimePicker").minDate(e.date.add(1, 'days'));
            });
            $("#toDate").on("dp.change", function (e) {
                $('#fromDate').data("DateTimePicker").maxDate(e.date.subtract(1, 'days'));
            });
            $.ajax({
                url: "@(Url.Action("ReviewByTimePartialView", "Report"))",
                method: "GET",
                success: function (data) {
                    $("#review-income-content").html(data);
                    var label = [];
                    var income = [];
                    $("#income-table tbody tr").each(function (index, row) {
                        label.push($(row).find("td:first").html() + " - " + $(row).find("td:nth-child(2)").html());
                        var incomeS = $(row).find("td:nth-child(5)").html();
                        income.push(incomeS.substring(0, incomeS.length - 2).split('.').join(""));
                    });
                    var linedata = {
                        labels: label,
                        datasets: [
                            {
                                fillColor: "rgba(151,187,205,0.5)",
                                strokeColor: "rgba(151,187,205,1)",
                                pointColor: "rgba(151,187,205,1)",
                                pointStrokeColor: "#fff",
                                data: income,
                                title: "Thu nhập"
                            }
                        ]
                    }

                    var opt1 = {
                        legend: true,
                        graphTitleFontSize: 18,
                        graphMin: 0,
                        responsive: true,
                        xAxisLabel: "Thời gian",
                        yAxisUnit: "đồng",
                        yAxisLabel: "Thu nhập",
                        thousandSeparator: ".",
                        // Specify the number of Y-scales to display
                        scaleOverride: true,
                        // The start value of the scale
                        scaleStartValue: 0,
                        // The number of Y-scales to display
                        scaleSteps: 10,
                        // The width between two Y-scale
                        scaleStepWidth: 500000,
                        // The space between the X Axis (on position 0) can be filled or not
                        datasetFill: false,
                        annotateDisplay: true,
                        annotateFunctionIn: myFctIn
                    }
                    new Chart(document.getElementById("lineChart").getContext("2d")).Line(linedata, opt1);
                },
                fail: function (e) {

                }
            });
        });
        $("#time-type").on("change", function () {
            var timeType = $("#time-type").val();
            if (timeType === "1") {
                $('#fromDate').data("DateTimePicker").viewMode("days").format("DD/MM/YYYY").maxDate(moment().subtract(7, 'days'));
                $('#toDate').data("DateTimePicker").viewMode("days").format("DD/MM/YYYY").maxDate(moment()).date(moment());
                $("#fromDate").on("dp.change", function (e) {
                    $('#toDate').data("DateTimePicker").minDate(e.date.add(1, 'days'));
                });
                $("#toDate").on("dp.change", function (e) {
                    $('#fromDate').data("DateTimePicker").maxDate(e.date.subtract(1, 'days'));
                });
            } else if (timeType === "2") {
                $('#fromDate').data("DateTimePicker").viewMode("months").format("MM/YYYY").viewDate(moment().startOf('month')).maxDate(moment().endOf('month'));
                $('#toDate').data("DateTimePicker").viewMode("months").format("MM/YYYY").viewDate(moment().startOf('month')).maxDate(moment().endOf('month'));
                $("#fromDate").on("dp.change", function (e) {
                    $('#toDate').data("DateTimePicker").minDate(e.date.startOf('month'));
                });
                $("#toDate").on("dp.change", function (e) {
                    $('#fromDate').data("DateTimePicker").maxDate(e.date.add(1, 'months').endOf('month'));
                });
            } else if (timeType === "3") {
                $('#fromDate').data("DateTimePicker").viewMode("years").format("YYYY").viewDate(moment().startOf('year')).maxDate(moment().endOf('year'));
                $('#toDate').data("DateTimePicker").viewMode("years").format("YYYY").viewDate(moment().startOf('year')).maxDate(moment().endOf('year'));
                $("#fromDate").on("dp.change", function (e) {
                    $('#toDate').data("DateTimePicker").minDate(e.date.startOf('year'));
                });
                $("#toDate").on("dp.change", function (e) {
                    $('#fromDate').data("DateTimePicker").maxDate(e.date.add(1, 'years').endOf('year'));
                });
            }

        });

        function myFctIn(area, ctx, data, statdata, posi, posj, othervars) {
            $("#income-table tbody tr:nth-child(" + (posj + 1) + ")").addClass('selected').siblings().removeClass('selected');
        }

        function executeChart() {
            var fromDateString = $("#fromDate input").val();
            var toDateString = $("#toDate input").val();
            var timeType = $("#time-type").val();
            $.ajax({
                url: "@(Url.Action("ReviewByTimePartialView", "Report"))",
                method: "GET",
                data: {
                    "start": fromDateString,
                    "end": toDateString,
                    "type": timeType
                },
                success: function (data) {
                    $("#review-income-content").html(data);
                    var label = [];
                    var income = [];

                    if (timeType === "1") {
                        $("#income-table tbody tr").each(function (index, row) {
                            label.push($(row).find("td:first").html() + " - " + $(row).find("td:nth-child(2)").html());
                            var incomeS = $(row).find("td:nth-child(5)").html();
                            income.push(incomeS.substring(0, incomeS.length - 2).split('.').join(""));
                        });
                    }
                    if (timeType === "2" || timeType === "3") {
                        $("#income-table tbody tr").each(function (index, row) {
                            label.push($(row).find("td:first").html());
                            var incomeS = $(row).find("td:nth-child(5)").html();
                            income.push(incomeS.substring(0, incomeS.length - 2).split('.').join(""));
                        });
                    }

                    var linedata = {
                        labels: label,
                        datasets: [
                            {
                                fillColor: "rgba(151,187,205,0.5)",
                                strokeColor: "rgba(151,187,205,1)",
                                pointColor: "rgba(151,187,205,1)",
                                pointStrokeColor: "#fff",
                                data: income,
                                title: "Thu nhập"
                            }
                        ]
                    }

                    var opt1 = {
                        legend: true,
                        graphTitleFontSize: 18,
                        graphMin: 0,
                        responsive: true,
                        xAxisLabel: "Thời gian",
                        yAxisUnit: "đồng",
                        yAxisLabel: "Thu nhập",
                        thousandSeparator: ".",
                        // Specify the number of Y-scales to display
                        scaleOverride: true,
                        // The start value of the scale
                        scaleStartValue: 0,
                        // The number of Y-scales to display
                        scaleSteps: 10,
                        // The width between two Y-scale
                        scaleStepWidth: 500000,
                        // The space between the X Axis (on position 0) can be filled or not
                        datasetFill: false,
                        annotateDisplay: true,
                        annotateFunctionIn: myFctIn
                    }

                    var opt3 = {
                        legend: true,
                        graphTitleFontSize: 18,
                        graphMin: 0,
                        responsive: true,
                        xAxisLabel: "Thời gian",
                        yAxisUnit: "đồng",
                        yAxisLabel: "Thu nhập",
                        thousandSeparator: ".",
                        // Specify the number of Y-scales to display
                        scaleOverride: true,
                        // The start value of the scale
                        scaleStartValue: 0,
                        // The number of Y-scales to display
                        scaleSteps: 10,
                        // The width between two Y-scale
                        scaleStepWidth: 2000000,
                        // The space between the X Axis (on position 0) can be filled or not
                        datasetFill: false,
                        annotateDisplay: true,
                        annotateFunctionIn: myFctIn
                    }
                    if (timeType === "1" || timeType === "2") {
                        new Chart(document.getElementById("lineChart").getContext("2d")).Line(linedata, opt1);
                    }
                    if (timeType === "3") {
                        new Chart(document.getElementById("lineChart").getContext("2d")).Line(linedata, opt3);
                    }
                },
                fail: function (e) {

                }
            });
        }
    </script>
}

